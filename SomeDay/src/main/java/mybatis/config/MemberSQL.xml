<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

<resultMap type="memberModel" id="memberRes">
		<result property="idx" column="idx" />
		<result property="id" column="id" />
		<result property="nick" column="nick" />
		<result property="pass" column="pass" />
		<!-- <result property="pass2" column="pass2" /> -->
		<result property="name" column="name" />
		<result property="age" column="age" />
		<result property="bloodgroup" column="bloodgroup"/>
		<result property="gender" column="gender" />
		<result property="area" column="area" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="num1" column="num1" />
		<result property="num2" column="num2" />
		<result property="zipcode" column="zipcode"/>
		<result property="addr1" column="addr1" />
		<result property="addr2" column="addr2" />
		<result property="intro" column="intro" />
		<result property="score_avg" column="score_avg" />
		<result property="authority" column="authority" />
		<result property="times" column="times" />
		<result property="file_orgname" column="file_orgname" />
		<result property="file_savname" column="file_savname" />
	</resultMap>
	
	<resultMap type="zipcodeModel" id="zipcodeRes">
		<result property="zipcode" column="zipcode" />
		<result property="area1" column="area1" />
		<result property="area2" column="area2" />
		<result property="area3" column="area3" />
		<result property="area4" column="area4" />
	</resultMap>
	
	
	
	<!-- 공통으로 사용할 select 의 -->
	<sql id="select-all-m">
	SELECT * FROM MEMBER 
	</sql>
	
	<select id="memberList" resultMap="memberRes">
		SELECT * FROM MEMBER ORDER BY idx DESC
	</select>

	<select id="selectAll-m" resultMap="memberRes" parameterType="int">
		<include refid="select-all-m" />

	</select>

        <!-- 로그인 체크 -->
	<select id="login" parameterType="memberModel" resultMap="memberRes">
		select
		* from member where id=#{id} and pass=#{pass}
	</select>

	<!-- 아이디 찾기 쿼리문 정의 -->
	<select id="getMember" parameterType="String" resultMap="memberRes">
		<include refid="select-all-m" />
		WHERE id = #{id}
	</select>


	<!-- 회원정보 입력 쿼리문 -->
	<insert id="insertMember" parameterType="memberModel">
		insert into
		 member(idx, id, nick, pass, name, age, bloodgroup, gender, area, email,
		 phone, num1, num2, zipcode, addr1, addr2, intro, score_avg, authority, times)
		values
	   	(member_idx_seq.nextval, #{id}, #{nick}, #{pass}, #{name}, #{age}, #{bloodgroup}, #{gender}, #{area}, #{email},
		 #{phone}, #{num1}, #{num2}, #{zipcode}, #{addr1}, #{addr2}, #{intro}, #{score_avg}, #{authority}, sysdate)
	</insert>
	
	
	 <!-- 아이디중복 확인 -->
	<!-- <select id="idCheck" parameterType="String" resultMap="memberRes"> 
		<include refid="select-all-m" />
		WHERE id = #{id}
	</select>  -->

	<!-- 아이디검색  -->
	<!-- <select id="selectSearch0-m" parameterType="string" resultMap="memberRes"> 
		<include refid="select-all-m" /> 
	WHERE id like #{id} 
	</select>  --> 

	<!-- 회원정보 수정 -->
	<!-- <update id="updateMember" parameterType="memberModel"> 
		UPDATE MEMBER SET 
		name = #{name}, 		
		phone = #{phone},
 		email = #{email} 
		where id = #{id} 
 	</update>  -->

	<!-- 이름으로 비밀번호 와 아이디 찾기 --> 
    <select id="idfind" parameterType="memberModel" resultMap="memberRes"> 
		select *
		from member 
		where name = #{name} and num1 = #{num1} and num2 = #{num2} 
	</select>
	
	<select id="pwfind" parameterType="memberModel" resultMap="memberRes"> 
		select *
		from member 
		where name = #{name} and id = #{id} and num1 = #{num1} and num2 = #{num2} 
	</select>  
	
 	<!-- 회원탈퇴 --> 
 	 <!-- <delete id="deleteMember" parameterType="String">
 		DELETE FROM MEMBER
		WHERE
 		ID = #{id}
	</delete> -->
	
	
	 <select id="zipcodeCheck" parameterType="zipcodeModel" resultMap="zipcodeRes"> 
		select * from zipcode where AREA3 like #{area3}
	</select> 
	
	<!-- 전체검색 -->
	<select id="memberSearch0" resultMap="memberRes" parameterType="String">
		SELECT * FROM member
			WHERE idx like #{search} 
			or id like #{search}
			or name like #{search}
			or phone like #{search}
			or email like #{search}
			or zipcode like #{search}
			or addr1 like #{search}		
		ORDER BY idx DESC
	</select>
		
	<!-- 관리자  회원수정-->
	<!-- <update id="adminupdateMember" parameterType="memberModel"> 
		UPDATE MEMBER SET 
			password = #{password}, 
			name = #{name},			
			zipcode = #{zipcode},  	
			addr = #{addr}, 	
			phone = #{phone},
	 		email = #{email},
	 		point = #{point}
		where id = #{id} 
 	</update>  -->
	
	
	
	
	
	
</mapper>	